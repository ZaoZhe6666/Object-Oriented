以下依次为第三次作业readme，第十三次作业新增和第十四次作业新增

第三次作业Readme：

一、 输入要求

可以采用一行输入多个指令， 或一行输入一个指令的模式输入。 最终输入一
行单独的小写 run 后开始计算输出。

输入的指令时间为正整数（在[0,2^31-1]内），楼层为一位或两位正整数， 数
字前最多允许二十个前导零，最多允许数字前出现一个正号或负号。

楼层共十层， 最底层只有向上运行请求按钮， 最顶层只有向下运行请求按钮，
中间楼层同时有向上和向下两个方向请求按钮。 程序运行开始或重置时设置电梯
停靠在一层。（请求省略要求同指导书，此不赘述）

从主请求发出时刻起（包括发出时刻） 到主请求到达目标楼层开门（不包括
开门时刻）止，对满足可捎带的请求进行捎带。

捎带方法见指导书。

电梯不能突然改变运动状态

若存在“未完成” 的捎带请求， 则在主请求后将第一个未完成捎带请求变为
主请求。

楼层请求格式为： (FR, m, UP/DOWN, T)， 其中 FR 为标识， m 为发出请求的
楼层号， UP 为向上请求， DOWN 为向下请求， T 为发出时刻。

电梯内请求格式为： (ER, n, T)，其中 ER 为标识， n 为请求去往的目标楼层
号， T 为发出时刻。

括号内的逗号应采用 ASCII 字符集中的逗号“,”， 而不是中文字符逗号“， ”。
请求之间可以使用空格、 Tab 和换行分隔（额外提示， 如第二次作业公测样例中
括号间出现逗号的情况， 程序会报错并提取正确部分， 即报错并输出正确结果）。
请求内部元素之间可以有空格。请求之中允许使用空格、 Tab，但不允许使用换
行分隔。

当一行输入存在错误时， 若其中存在正确指令， 仍选取其中正确的指令保留，
无论是否有保留，弹出错误提示（此在后文中详细说明）。



二、 输出要求

每个不被忽略的正确指令操作会产生一行输出。

忽略请求会出现 SAME[指令]

按捎带顺序输出，优先输出捎带指令，再输出 SAME 指令，再输出主请求。



容错（以下报错均为输入一行键入回车后立即输出）

当输入全不合法或仅输入一行 run 时， 报错“No valid input at all!”（“无有效
输出，请检查是否输入均有误，或直接运行了 run 语句！”）

当楼层为 10 楼， 但申请 UP 指令时， 报错“Illegal Input!(The house has a roof!)”

当楼层为 1 楼，但申请 DOWN 指令时，报错 “ Illegal Input!(There's no
basement!)”

当第一条有效指令不为(FR,1,UP,0)时， 报错“Illegal Input!((The first instruction
should be (FR,1,UP,0)!)”

当请求指令的楼层数不为 1~10 及之间的正整数时， 报错“Illegal Input!(Where
are you going?”

当请求指令时间超过[0,2^32-1]范围时，报错“Illegal Input!(Are you trying to
crash my int variables?)”

当请求指令时间不为非减序时，报错“ Illegal Input!(Do not satisfy the time
order!)”

当存在其他不符合标准的输入时，报错“Illegal Input!”
其余未知错误，如输入 ctrl+Z 等，报错“Something was wrong!”

当指令被忽略时，输出 SAME[request]（运行完 run 后再输出）




第十三次作业新增：

增加了ElevatorTest用于测试Elevator类
增加了QueueTest用于测试Queue类
增加了SchedulerTest用于测试Scheduler和Scheduler_old类

使用了eclipse的eclemma插件，测试结果如压缩包中的截图
截图分别为：
单独测试ElevatorTest、单独测试QueueTest、单独测试SchedulerTest（由于太长所以截了两张）
综合测试三个Test文件

Elevator和Queue均100%覆盖测试
Scheduler97.9%覆盖测试，未测试部分有
1	引入的测试用数字number for test（简称nft）部分三目运算
		解释：为了能assert确定是否程序执行到指定位置，部分地方使用三目来选择断言路线，没有进行测试，因为这本身就是为了测试设计的
2	repOK中的instanceof均没有测试
		解释：老师给的标准JSF中有写instanceof的判断，但是我不知道怎么才能让
			声明的变量不是原属性，我尝试着强行赋值，结果编译就不通过


第十四次作业新增：

没什么新增的，几个小细节吧
正确性论证的时候没有去论证number for test（简称nft）的变量
因为我觉得这个是为了白盒测试引入的，硬要改变的话也不会有什么影响，最终也会把他们从程序中删除

程序中的jsf可能会出现变量名和实际变量名不符的情况。
比如floornow可能在JSF中被称为floor now或floor_now。
比如nft可能会在不变式中被称为number for test
这主要是因为eclipse有一个英文的纠错，如果写成连的floornow会出现下红线
希望可以理解


别的没什么了，辛苦你读到了这里。

和谐六系，笔芯(っ′Ι`)っ